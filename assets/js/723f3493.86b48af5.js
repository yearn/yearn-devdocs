"use strict";(self.webpackChunkyearn_devdocs=self.webpackChunkyearn_devdocs||[]).push([[1854],{24166:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>i,default:()=>o,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var d=t(74848),n=t(28453);const r={},i="DebtAllocator",a={id:"smart-contracts/deprecated/V3/version-3.0.3/Periphery/DebtAllocator",title:"DebtAllocator",description:"Git Source",source:"@site/docs/developers/smart-contracts/deprecated/V3/version-3.0.3/Periphery/DebtAllocator.md",sourceDirName:"smart-contracts/deprecated/V3/version-3.0.3/Periphery",slug:"/smart-contracts/deprecated/V3/version-3.0.3/Periphery/DebtAllocator",permalink:"/developers/smart-contracts/deprecated/V3/version-3.0.3/Periphery/DebtAllocator",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1731361534e3,frontMatter:{},sidebar:"developers",previous:{title:"CommonReportTrigger",permalink:"/developers/smart-contracts/deprecated/V3/version-3.0.3/Periphery/CommonReportTrigger"},next:{title:"Registry",permalink:"/developers/smart-contracts/deprecated/V3/version-3.0.3/Periphery/Registry"}},l={},c=[{value:"State Variables",id:"state-variables",level:2},{value:"MAX_BPS",id:"max_bps",level:3},{value:"minimumWait",id:"minimumwait",level:3},{value:"baseFeeProvider",id:"basefeeprovider",level:3},{value:"maxDebtUpdateLoss",id:"maxdebtupdateloss",level:3},{value:"maxAcceptableBaseFee",id:"maxacceptablebasefee",level:3},{value:"keepers",id:"keepers",level:3},{value:"managers",id:"managers",level:3},{value:"_vaultConfigs",id:"_vaultconfigs",level:3},{value:"_strategyConfigs",id:"_strategyconfigs",level:3},{value:"Functions",id:"functions",level:2},{value:"onlyManagers",id:"onlymanagers",level:3},{value:"onlyKeepers",id:"onlykeepers",level:3},{value:"_isManager",id:"_ismanager",level:3},{value:"_isKeeper",id:"_iskeeper",level:3},{value:"constructor",id:"constructor",level:3},{value:"initialize",id:"initialize",level:3},{value:"update_debt",id:"update_debt",level:3},{value:"shouldUpdateDebt",id:"shouldupdatedebt",level:3},{value:"increaseStrategyDebtRatio",id:"increasestrategydebtratio",level:3},{value:"decreaseStrategyDebtRatio",id:"decreasestrategydebtratio",level:3},{value:"setStrategyDebtRatio",id:"setstrategydebtratio",level:3},{value:"setStrategyDebtRatio",id:"setstrategydebtratio-1",level:3},{value:"removeStrategy",id:"removestrategy",level:3},{value:"setMinimumChange",id:"setminimumchange",level:3},{value:"setPaused",id:"setpaused",level:3},{value:"setMinimumWait",id:"setminimumwait",level:3},{value:"setManager",id:"setmanager",level:3},{value:"setMaxDebtUpdateLoss",id:"setmaxdebtupdateloss",level:3},{value:"setBaseFeeProvider",id:"setbasefeeprovider",level:3},{value:"setMaxAcceptableBaseFee",id:"setmaxacceptablebasefee",level:3},{value:"setKeeper",id:"setkeeper",level:3},{value:"getStrategyConfig",id:"getstrategyconfig",level:3},{value:"getVaultConfig",id:"getvaultconfig",level:3},{value:"totalDebtRatio",id:"totaldebtratio",level:3},{value:"minimumChange",id:"minimumchange",level:3},{value:"isPaused",id:"ispaused",level:3},{value:"getStrategyTargetRatio",id:"getstrategytargetratio",level:3},{value:"getStrategyMaxRatio",id:"getstrategymaxratio",level:3},{value:"isCurrentBaseFeeAcceptable",id:"iscurrentbasefeeacceptable",level:3},{value:"Events",id:"events",level:2},{value:"UpdatedBaseFeeProvider",id:"updatedbasefeeprovider",level:3},{value:"UpdateKeeper",id:"updatekeeper",level:3},{value:"UpdateMaxAcceptableBaseFee",id:"updatemaxacceptablebasefee",level:3},{value:"UpdateStrategyDebtRatio",id:"updatestrategydebtratio",level:3},{value:"StrategyChanged",id:"strategychanged",level:3},{value:"UpdateMinimumChange",id:"updateminimumchange",level:3},{value:"UpdatePaused",id:"updatepaused",level:3},{value:"UpdateMinimumWait",id:"updateminimumwait",level:3},{value:"UpdateManager",id:"updatemanager",level:3},{value:"UpdateMaxDebtUpdateLoss",id:"updatemaxdebtupdateloss",level:3},{value:"Structs",id:"structs",level:2},{value:"StrategyConfig",id:"strategyconfig",level:3},{value:"VaultConfig",id:"vaultconfig",level:3},{value:"StrategyDebtInfo",id:"strategydebtinfo",level:3},{value:"Enums",id:"enums",level:2},{value:"Status",id:"status",level:3}];function h(e){const s={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(s.header,{children:(0,d.jsx)(s.h1,{id:"debtallocator",children:"DebtAllocator"})}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.a,{href:"https://github.com/yearn/vault-periphery/blob/68b201f38716a8ab5aa5cedce51a90f52c89578b/src/debtAllocators/DebtAllocator.sol",children:"Git Source"})}),"\n",(0,d.jsxs)(s.p,{children:[(0,d.jsx)(s.strong,{children:"Inherits:"}),"\n",(0,d.jsx)(s.a,{href:"https://github.com/yearn/tokenized-strategy-periphery/blob/f139be6286cb3d630b0bce6d6db812c709e5bb47/src/utils/Governance.sol",children:"Governance"})]}),"\n",(0,d.jsxs)(s.p,{children:[(0,d.jsx)(s.strong,{children:"Author:"}),"\nyearn.finance"]}),"\n",(0,d.jsx)(s.p,{children:"This Debt Allocator is meant to be used alongside\nYearn V3 vaults to provide the needed triggers for a keeper\nto perform automated debt updates for the vaults strategies."}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{}),"\n"]}),"\n",(0,d.jsxs)(s.p,{children:["Each vault that should be managed by this allocator will\nneed to be added by first setting a ",(0,d.jsx)(s.code,{children:"minimumChange"})," for the\nvault, which will act as the minimum amount of funds to move that will\ntrigger a debt update. Then adding each strategy by setting a\n",(0,d.jsx)(s.code,{children:"targetRatio"})," and optionally a ",(0,d.jsx)(s.code,{children:"maxRatio"}),".\nThe allocator aims to allocate debt between the strategies\nbased on their set target ratios. Which are denominated in basis\npoints and represent the percent of total assets that specific\nstrategy should hold (i.e 1_000 == 10% of the vaults ",(0,d.jsx)(s.code,{children:"totalAssets"}),").\nThe trigger will attempt to allocate up to the ",(0,d.jsx)(s.code,{children:"maxRatio"})," when\nthe strategy has ",(0,d.jsx)(s.code,{children:"minimumChange"})," amount less than the ",(0,d.jsx)(s.code,{children:"targetRatio"}),".\nAnd will pull funds to the ",(0,d.jsx)(s.code,{children:"targetRatio"})," when it has ",(0,d.jsx)(s.code,{children:"minimumChange"}),"\nmore than its ",(0,d.jsx)(s.code,{children:"maxRatio"}),".*"]}),"\n",(0,d.jsx)(s.h2,{id:"state-variables",children:"State Variables"}),"\n",(0,d.jsx)(s.h3,{id:"max_bps",children:"MAX_BPS"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"uint256 internal constant MAX_BPS = 10_000;\n"})}),"\n",(0,d.jsx)(s.h3,{id:"minimumwait",children:"minimumWait"}),"\n",(0,d.jsx)(s.p,{children:"Time to wait between debt updates in seconds."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"uint256 public minimumWait;\n"})}),"\n",(0,d.jsx)(s.h3,{id:"basefeeprovider",children:"baseFeeProvider"}),"\n",(0,d.jsx)(s.p,{children:"Provider to read current block's base fee."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"address public baseFeeProvider;\n"})}),"\n",(0,d.jsx)(s.h3,{id:"maxdebtupdateloss",children:"maxDebtUpdateLoss"}),"\n",(0,d.jsx)(s.p,{children:"Max loss to accept on debt updates in basis points."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"uint256 public maxDebtUpdateLoss;\n"})}),"\n",(0,d.jsx)(s.h3,{id:"maxacceptablebasefee",children:"maxAcceptableBaseFee"}),"\n",(0,d.jsx)(s.p,{children:"Max the chains base fee can be during debt update."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"uint256 public maxAcceptableBaseFee;\n"})}),"\n",(0,d.jsx)(s.h3,{id:"keepers",children:"keepers"}),"\n",(0,d.jsx)(s.p,{children:"Mapping of addresses that are allowed to update debt."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"mapping(address => bool) public keepers;\n"})}),"\n",(0,d.jsx)(s.h3,{id:"managers",children:"managers"}),"\n",(0,d.jsx)(s.p,{children:"Mapping of addresses that are allowed to update debt ratios."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"mapping(address => bool) public managers;\n"})}),"\n",(0,d.jsx)(s.h3,{id:"_vaultconfigs",children:"_vaultConfigs"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"mapping(address => VaultConfig) internal _vaultConfigs;\n"})}),"\n",(0,d.jsx)(s.h3,{id:"_strategyconfigs",children:"_strategyConfigs"}),"\n",(0,d.jsx)(s.p,{children:"Mapping of vault => strategy => its config."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"mapping(address => mapping(address => StrategyConfig)) internal _strategyConfigs;\n"})}),"\n",(0,d.jsx)(s.h2,{id:"functions",children:"Functions"}),"\n",(0,d.jsx)(s.h3,{id:"onlymanagers",children:"onlyManagers"}),"\n",(0,d.jsx)(s.p,{children:"Make sure the caller is governance or a manager."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"modifier onlyManagers();\n"})}),"\n",(0,d.jsx)(s.h3,{id:"onlykeepers",children:"onlyKeepers"}),"\n",(0,d.jsx)(s.p,{children:"Make sure the caller is a keeper"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"modifier onlyKeepers();\n"})}),"\n",(0,d.jsx)(s.h3,{id:"_ismanager",children:"_isManager"}),"\n",(0,d.jsx)(s.p,{children:"Check is either factories governance or local manager."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"function _isManager() internal view virtual;\n"})}),"\n",(0,d.jsx)(s.h3,{id:"_iskeeper",children:"_isKeeper"}),"\n",(0,d.jsx)(s.p,{children:"Check is one of the allowed keepers."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"function _isKeeper() internal view virtual;\n"})}),"\n",(0,d.jsx)(s.h3,{id:"constructor",children:"constructor"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"constructor() Governance(msg.sender);\n"})}),"\n",(0,d.jsx)(s.h3,{id:"initialize",children:"initialize"}),"\n",(0,d.jsx)(s.p,{children:"Initialize the contract after being cloned."}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.em,{children:"Sets default values for the global variables."})}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"function initialize(address _governance) external;\n"})}),"\n",(0,d.jsx)(s.h3,{id:"update_debt",children:"update_debt"}),"\n",(0,d.jsx)(s.p,{children:"Debt update wrapper for the vault."}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsxs)(s.em,{children:["This contract must have the DEBT_MANAGER role assigned to them.\nThis will also uses the ",(0,d.jsx)(s.code,{children:"maxUpdateDebtLoss"})," during debt\nupdates to assure decreases did not realize profits outside\nof the allowed range."]})}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"function update_debt(address _vault, address _strategy, uint256 _targetDebt) public virtual onlyKeepers;\n"})}),"\n",(0,d.jsx)(s.h3,{id:"shouldupdatedebt",children:"shouldUpdateDebt"}),"\n",(0,d.jsx)(s.p,{children:"Check if a strategy's debt should be updated."}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.em,{children:"This should be called by a keeper to decide if a strategies\ndebt should be updated and if so by how much."})}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"function shouldUpdateDebt(address _vault, address _strategy) public view virtual returns (bool, bytes memory);\n"})}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Parameters"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_vault"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"address"})}),(0,d.jsx)(s.td,{children:"Address of the vault to update."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_strategy"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"address"})}),(0,d.jsx)(s.td,{children:"Address of the strategy to check."})]})]})]}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Returns"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"<none>"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"bool"})}),(0,d.jsx)(s.td,{children:". Bool representing if the debt should be updated."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"<none>"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"bytes"})}),(0,d.jsxs)(s.td,{children:[". Calldata if ",(0,d.jsx)(s.code,{children:"true"})," or reason if ",(0,d.jsx)(s.code,{children:"false"}),"."]})]})]})]}),"\n",(0,d.jsx)(s.h3,{id:"increasestrategydebtratio",children:"increaseStrategyDebtRatio"}),"\n",(0,d.jsx)(s.p,{children:"Increase a strategies target debt ratio."}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsxs)(s.em,{children:[(0,d.jsx)(s.code,{children:"setStrategyDebtRatio"})," functions will do all needed checks."]})}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"function increaseStrategyDebtRatio(address _vault, address _strategy, uint256 _increase) external virtual;\n"})}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Parameters"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_vault"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"address"})}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_strategy"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"address"})}),(0,d.jsx)(s.td,{children:"The address of the strategy to increase the debt ratio for."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_increase"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"uint256"})}),(0,d.jsx)(s.td,{children:"The amount in Basis Points to increase it."})]})]})]}),"\n",(0,d.jsx)(s.h3,{id:"decreasestrategydebtratio",children:"decreaseStrategyDebtRatio"}),"\n",(0,d.jsx)(s.p,{children:"Decrease a strategies target debt ratio."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"function decreaseStrategyDebtRatio(address _vault, address _strategy, uint256 _decrease) external virtual;\n"})}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Parameters"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_vault"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"address"})}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_strategy"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"address"})}),(0,d.jsx)(s.td,{children:"The address of the strategy to decrease the debt ratio for."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_decrease"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"uint256"})}),(0,d.jsx)(s.td,{children:"The amount in Basis Points to decrease it."})]})]})]}),"\n",(0,d.jsx)(s.h3,{id:"setstrategydebtratio",children:"setStrategyDebtRatio"}),"\n",(0,d.jsx)(s.p,{children:"Sets a new target debt ratio for a strategy."}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.em,{children:"This will default to a 20% increase for max debt."})}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"function setStrategyDebtRatio(address _vault, address _strategy, uint256 _targetRatio) public virtual;\n"})}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Parameters"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_vault"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"address"})}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_strategy"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"address"})}),(0,d.jsx)(s.td,{children:"Address of the strategy to set."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_targetRatio"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"uint256"})}),(0,d.jsx)(s.td,{children:"Amount in Basis points to allocate."})]})]})]}),"\n",(0,d.jsx)(s.h3,{id:"setstrategydebtratio-1",children:"setStrategyDebtRatio"}),"\n",(0,d.jsx)(s.p,{children:"Sets a new target debt ratio for a strategy."}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsxs)(s.em,{children:["A ",(0,d.jsx)(s.code,{children:"minimumChange"})," for that strategy must be set first.\nThis is to prevent debt from being updated too frequently."]})}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"function setStrategyDebtRatio(address _vault, address _strategy, uint256 _targetRatio, uint256 _maxRatio)\n    public\n    virtual\n    onlyManagers;\n"})}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Parameters"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_vault"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"address"})}),(0,d.jsx)(s.td,{children:"Address of the vault"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_strategy"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"address"})}),(0,d.jsx)(s.td,{children:"Address of the strategy to set."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_targetRatio"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"uint256"})}),(0,d.jsx)(s.td,{children:"Amount in Basis points to allocate."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_maxRatio"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"uint256"})}),(0,d.jsx)(s.td,{children:"Max ratio to give on debt increases."})]})]})]}),"\n",(0,d.jsx)(s.h3,{id:"removestrategy",children:"removeStrategy"}),"\n",(0,d.jsx)(s.p,{children:"Remove a strategy from this debt allocator."}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.em,{children:"Will delete the full config for the strategy"})}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"function removeStrategy(address _vault, address _strategy) external virtual onlyManagers;\n"})}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Parameters"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_vault"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"address"})}),(0,d.jsx)(s.td,{children:"Address of the vault"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_strategy"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"address"})}),(0,d.jsx)(s.td,{children:"Address of the address ro remove."})]})]})]}),"\n",(0,d.jsx)(s.h3,{id:"setminimumchange",children:"setMinimumChange"}),"\n",(0,d.jsx)(s.p,{children:"Set the minimum change variable for a strategy."}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.em,{children:"This is the minimum amount of debt to be\nadded or pulled for it to trigger an update."})}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"function setMinimumChange(address _vault, uint256 _minimumChange) external virtual onlyGovernance;\n"})}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Parameters"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_vault"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"address"})}),(0,d.jsx)(s.td,{children:"Address of the vault"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_minimumChange"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"uint256"})}),(0,d.jsx)(s.td,{children:"The new minimum to set for the strategy."})]})]})]}),"\n",(0,d.jsx)(s.h3,{id:"setpaused",children:"setPaused"}),"\n",(0,d.jsx)(s.p,{children:"Allows governance to pause the triggers."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"function setPaused(address _vault, bool _status) external virtual onlyGovernance;\n"})}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Parameters"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_vault"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"address"})}),(0,d.jsx)(s.td,{children:"Address of the vault"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_status"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"bool"})}),(0,d.jsxs)(s.td,{children:["Status to set the ",(0,d.jsx)(s.code,{children:"paused"})," bool to."]})]})]})]}),"\n",(0,d.jsx)(s.h3,{id:"setminimumwait",children:"setMinimumWait"}),"\n",(0,d.jsx)(s.p,{children:"Set the minimum time to wait before re-updating a strategies debt."}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.em,{children:"This is only enforced per strategy."})}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"function setMinimumWait(uint256 _minimumWait) external virtual onlyGovernance;\n"})}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Parameters"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsx)(s.tbody,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_minimumWait"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"uint256"})}),(0,d.jsx)(s.td,{children:"The minimum time in seconds to wait."})]})})]}),"\n",(0,d.jsx)(s.h3,{id:"setmanager",children:"setManager"}),"\n",(0,d.jsx)(s.p,{children:"Set if a manager can update ratios."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"function setManager(address _address, bool _allowed) external virtual onlyGovernance;\n"})}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Parameters"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_address"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"address"})}),(0,d.jsx)(s.td,{children:"The address to set mapping for."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_allowed"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"bool"})}),(0,d.jsxs)(s.td,{children:["If the address can call ",(0,d.jsx)(s.a,{href:"#update_debt",children:"update_debt"}),"."]})]})]})]}),"\n",(0,d.jsx)(s.h3,{id:"setmaxdebtupdateloss",children:"setMaxDebtUpdateLoss"}),"\n",(0,d.jsx)(s.p,{children:"Set the max loss in Basis points to allow on debt updates."}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsxs)(s.em,{children:["Withdrawing during debt updates use ",(0,d.jsx)(s.code,{children:"redeem"})," which allows for 100% loss.\nThis can be used to assure a loss is not realized on redeem outside the tolerance."]})}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"function setMaxDebtUpdateLoss(uint256 _maxDebtUpdateLoss) external virtual onlyGovernance;\n"})}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Parameters"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsx)(s.tbody,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_maxDebtUpdateLoss"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"uint256"})}),(0,d.jsx)(s.td,{children:"The max loss to accept on debt updates."})]})})]}),"\n",(0,d.jsx)(s.h3,{id:"setbasefeeprovider",children:"setBaseFeeProvider"}),"\n",(0,d.jsx)(s.p,{children:"Used to set our baseFeeProvider, which checks the network's current base\nfee price to determine whether it is an optimal time to harvest or tend.\nThis may only be called by governance."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"function setBaseFeeProvider(address _baseFeeProvider) external virtual onlyGovernance;\n"})}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Parameters"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsx)(s.tbody,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_baseFeeProvider"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"address"})}),(0,d.jsx)(s.td,{children:"Address of our baseFeeProvider"})]})})]}),"\n",(0,d.jsx)(s.h3,{id:"setmaxacceptablebasefee",children:"setMaxAcceptableBaseFee"}),"\n",(0,d.jsx)(s.p,{children:"Set the max acceptable base fee."}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.em,{children:"This defaults to max uint256 and will need to\nbe set for it to be used.\nIs denominated in gwei. So 50gwei would be set as 50e9."})}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"function setMaxAcceptableBaseFee(uint256 _maxAcceptableBaseFee) external virtual onlyGovernance;\n"})}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Parameters"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsx)(s.tbody,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_maxAcceptableBaseFee"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"uint256"})}),(0,d.jsx)(s.td,{children:"The new max base fee."})]})})]}),"\n",(0,d.jsx)(s.h3,{id:"setkeeper",children:"setKeeper"}),"\n",(0,d.jsx)(s.p,{children:"Set if a keeper can update debt."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"function setKeeper(address _address, bool _allowed) external virtual onlyGovernance;\n"})}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Parameters"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_address"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"address"})}),(0,d.jsx)(s.td,{children:"The address to set mapping for."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_allowed"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"bool"})}),(0,d.jsxs)(s.td,{children:["If the address can call ",(0,d.jsx)(s.a,{href:"#update_debt",children:"update_debt"}),"."]})]})]})]}),"\n",(0,d.jsx)(s.h3,{id:"getstrategyconfig",children:"getStrategyConfig"}),"\n",(0,d.jsx)(s.p,{children:"Get a strategies full config."}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.em,{children:"Used for customizations by inheriting the contract."})}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"function getStrategyConfig(address _vault, address _strategy) public view virtual returns (StrategyConfig memory);\n"})}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Parameters"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_vault"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"address"})}),(0,d.jsx)(s.td,{children:"Address of the vault"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_strategy"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"address"})}),(0,d.jsx)(s.td,{children:"Address of the strategy."})]})]})]}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Returns"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsx)(s.tbody,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"<none>"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"StrategyConfig"})}),(0,d.jsx)(s.td,{children:"The strategies current Config."})]})})]}),"\n",(0,d.jsx)(s.h3,{id:"getvaultconfig",children:"getVaultConfig"}),"\n",(0,d.jsx)(s.p,{children:"Get a vaults full config."}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.em,{children:"Used for customizations by inheriting the contract."})}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"function getVaultConfig(address _vault) public view virtual returns (VaultConfig memory);\n"})}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Parameters"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsx)(s.tbody,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_vault"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"address"})}),(0,d.jsx)(s.td,{children:"Address of the vault."})]})})]}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Returns"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsx)(s.tbody,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"<none>"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"VaultConfig"})}),(0,d.jsx)(s.td,{children:"The vaults current Config."})]})})]}),"\n",(0,d.jsx)(s.h3,{id:"totaldebtratio",children:"totalDebtRatio"}),"\n",(0,d.jsx)(s.p,{children:"Get a vaults current total debt."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"function totalDebtRatio(address _vault) external view virtual returns (uint256);\n"})}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Parameters"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsx)(s.tbody,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_vault"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"address"})}),(0,d.jsx)(s.td,{children:"Address of the vault"})]})})]}),"\n",(0,d.jsx)(s.h3,{id:"minimumchange",children:"minimumChange"}),"\n",(0,d.jsx)(s.p,{children:"Get a vaults minimum change required."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"function minimumChange(address _vault) external view virtual returns (uint256);\n"})}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Parameters"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsx)(s.tbody,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_vault"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"address"})}),(0,d.jsx)(s.td,{children:"Address of the vault"})]})})]}),"\n",(0,d.jsx)(s.h3,{id:"ispaused",children:"isPaused"}),"\n",(0,d.jsx)(s.p,{children:"Get the paused status of a vault"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"function isPaused(address _vault) public view virtual returns (bool);\n"})}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Parameters"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsx)(s.tbody,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_vault"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"address"})}),(0,d.jsx)(s.td,{children:"Address of the vault"})]})})]}),"\n",(0,d.jsx)(s.h3,{id:"getstrategytargetratio",children:"getStrategyTargetRatio"}),"\n",(0,d.jsx)(s.p,{children:"Get a strategies target debt ratio."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"function getStrategyTargetRatio(address _vault, address _strategy) public view virtual returns (uint256);\n"})}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Parameters"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_vault"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"address"})}),(0,d.jsx)(s.td,{children:"Address of the vault"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_strategy"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"address"})}),(0,d.jsx)(s.td,{children:"Address of the strategy."})]})]})]}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Returns"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsx)(s.tbody,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"<none>"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"uint256"})}),(0,d.jsx)(s.td,{children:"The strategies current targetRatio."})]})})]}),"\n",(0,d.jsx)(s.h3,{id:"getstrategymaxratio",children:"getStrategyMaxRatio"}),"\n",(0,d.jsx)(s.p,{children:"Get a strategies max debt ratio."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"function getStrategyMaxRatio(address _vault, address _strategy) public view virtual returns (uint256);\n"})}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Parameters"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_vault"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"address"})}),(0,d.jsx)(s.td,{children:"Address of the vault"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"_strategy"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"address"})}),(0,d.jsx)(s.td,{children:"Address of the strategy."})]})]})]}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Returns"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsx)(s.tbody,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"<none>"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"uint256"})}),(0,d.jsx)(s.td,{children:"The strategies current maxRatio."})]})})]}),"\n",(0,d.jsx)(s.h3,{id:"iscurrentbasefeeacceptable",children:"isCurrentBaseFeeAcceptable"}),"\n",(0,d.jsxs)(s.p,{children:["Returns wether or not the current base fee is acceptable\nbased on the ",(0,d.jsx)(s.code,{children:"maxAcceptableBaseFee"}),"."]}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"function isCurrentBaseFeeAcceptable() public view virtual returns (bool);\n"})}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Returns"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsx)(s.tbody,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"<none>"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"bool"})}),(0,d.jsx)(s.td,{children:". If the current base fee is acceptable."})]})})]}),"\n",(0,d.jsx)(s.h2,{id:"events",children:"Events"}),"\n",(0,d.jsx)(s.h3,{id:"updatedbasefeeprovider",children:"UpdatedBaseFeeProvider"}),"\n",(0,d.jsx)(s.p,{children:"An event emitted when the base fee provider is set."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"event UpdatedBaseFeeProvider(address baseFeeProvider);\n"})}),"\n",(0,d.jsx)(s.h3,{id:"updatekeeper",children:"UpdateKeeper"}),"\n",(0,d.jsx)(s.p,{children:"An event emitted when a keeper is added or removed."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"event UpdateKeeper(address indexed keeper, bool allowed);\n"})}),"\n",(0,d.jsx)(s.h3,{id:"updatemaxacceptablebasefee",children:"UpdateMaxAcceptableBaseFee"}),"\n",(0,d.jsx)(s.p,{children:"An event emitted when the max base fee is updated."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"event UpdateMaxAcceptableBaseFee(uint256 newMaxAcceptableBaseFee);\n"})}),"\n",(0,d.jsx)(s.h3,{id:"updatestrategydebtratio",children:"UpdateStrategyDebtRatio"}),"\n",(0,d.jsx)(s.p,{children:"An event emitted when a strategies debt ratios are Updated."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"event UpdateStrategyDebtRatio(\n    address indexed vault,\n    address indexed strategy,\n    uint256 newTargetRatio,\n    uint256 newMaxRatio,\n    uint256 newTotalDebtRatio\n);\n"})}),"\n",(0,d.jsx)(s.h3,{id:"strategychanged",children:"StrategyChanged"}),"\n",(0,d.jsx)(s.p,{children:"An event emitted when a strategy is added or removed."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"event StrategyChanged(address indexed vault, address indexed strategy, Status status);\n"})}),"\n",(0,d.jsx)(s.h3,{id:"updateminimumchange",children:"UpdateMinimumChange"}),"\n",(0,d.jsx)(s.p,{children:"An event emitted when the minimum change is updated."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"event UpdateMinimumChange(address indexed vault, uint256 newMinimumChange);\n"})}),"\n",(0,d.jsx)(s.h3,{id:"updatepaused",children:"UpdatePaused"}),"\n",(0,d.jsx)(s.p,{children:"An even emitted when the paused status is updated."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"event UpdatePaused(address indexed vault, bool indexed status);\n"})}),"\n",(0,d.jsx)(s.h3,{id:"updateminimumwait",children:"UpdateMinimumWait"}),"\n",(0,d.jsx)(s.p,{children:"An event emitted when the minimum time to wait is updated."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"event UpdateMinimumWait(uint256 newMinimumWait);\n"})}),"\n",(0,d.jsx)(s.h3,{id:"updatemanager",children:"UpdateManager"}),"\n",(0,d.jsx)(s.p,{children:"An event emitted when a keeper is added or removed."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"event UpdateManager(address indexed manager, bool allowed);\n"})}),"\n",(0,d.jsx)(s.h3,{id:"updatemaxdebtupdateloss",children:"UpdateMaxDebtUpdateLoss"}),"\n",(0,d.jsx)(s.p,{children:"An event emitted when the max debt update loss is updated."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"event UpdateMaxDebtUpdateLoss(uint256 newMaxDebtUpdateLoss);\n"})}),"\n",(0,d.jsx)(s.h2,{id:"structs",children:"Structs"}),"\n",(0,d.jsx)(s.h3,{id:"strategyconfig",children:"StrategyConfig"}),"\n",(0,d.jsx)(s.p,{children:"Struct for each strategies info."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"struct StrategyConfig {\n    bool added;\n    uint16 targetRatio;\n    uint16 maxRatio;\n    uint96 lastUpdate;\n    uint120 open;\n}\n"})}),"\n",(0,d.jsx)(s.h3,{id:"vaultconfig",children:"VaultConfig"}),"\n",(0,d.jsx)(s.p,{children:"Struct to hold the vault's info."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"struct VaultConfig {\n    bool paused;\n    uint128 minimumChange;\n    uint16 totalDebtRatio;\n}\n"})}),"\n",(0,d.jsx)(s.h3,{id:"strategydebtinfo",children:"StrategyDebtInfo"}),"\n",(0,d.jsxs)(s.p,{children:["Used during the ",(0,d.jsx)(s.code,{children:"shouldUpdateDebt"})," to hold the data."]}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"struct StrategyDebtInfo {\n    VaultConfig vaultConfig;\n    StrategyConfig strategyConfig;\n    uint256 vaultAssets;\n    uint256 targetDebt;\n    uint256 maxDebt;\n    uint256 currentIdle;\n    uint256 minIdle;\n    uint256 toChange;\n}\n"})}),"\n",(0,d.jsx)(s.h2,{id:"enums",children:"Enums"}),"\n",(0,d.jsx)(s.h3,{id:"status",children:"Status"}),"\n",(0,d.jsx)(s.p,{children:"Status when a strategy is added or removed from the allocator."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-solidity",children:"enum Status {\n    NULL,\n    ADDED,\n    REMOVED\n}\n"})})]})}function o(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,d.jsx)(s,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>a});var d=t(96540);const n={},r=d.createContext(n);function i(e){const s=d.useContext(r);return d.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),d.createElement(r.Provider,{value:s},e.children)}}}]);