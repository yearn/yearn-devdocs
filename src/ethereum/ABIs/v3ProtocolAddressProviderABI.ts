export const v3ProtocolAddressProviderABI = [
  {
    name: 'UpdatedAddress',
    inputs: [
      { name: 'addressId', type: 'bytes32', indexed: true },
      { name: 'oldAddress', type: 'address', indexed: true },
      { name: 'newAddress', type: 'address', indexed: true },
    ],
    anonymous: false,
    type: 'event',
  },
  {
    name: 'UpdatePendingGovernance',
    inputs: [{ name: 'newPendingGovernance', type: 'address', indexed: true }],
    anonymous: false,
    type: 'event',
  },
  {
    name: 'UpdateGovernance',
    inputs: [
      { name: 'previousGovernance', type: 'address', indexed: true },
      { name: 'newGovernance', type: 'address', indexed: true },
    ],
    anonymous: false,
    type: 'event',
  },
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'governance', type: 'address' }],
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAddress',
    inputs: [{ name: 'address_id', type: 'bytes32' }],
    outputs: [{ name: '', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getReplacement',
    inputs: [],
    outputs: [{ name: '', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRouter',
    inputs: [],
    outputs: [{ name: '', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getKeeper',
    inputs: [],
    outputs: [{ name: '', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAprOracle',
    inputs: [],
    outputs: [{ name: '', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getReleaseRegistry',
    inputs: [],
    outputs: [{ name: '', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getBaseFeeProvider',
    inputs: [],
    outputs: [{ name: '', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getCommonReportTrigger',
    inputs: [],
    outputs: [{ name: '', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAuctionFactory',
    inputs: [],
    outputs: [{ name: '', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getSplitterFactory',
    inputs: [],
    outputs: [{ name: '', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRegistryFactory',
    inputs: [],
    outputs: [{ name: '', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getDebtAllocatorFactory',
    inputs: [],
    outputs: [{ name: '', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getAccountantFactory',
    inputs: [],
    outputs: [{ name: '', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'getRoleManagerFactory',
    inputs: [],
    outputs: [{ name: '', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'setAddress',
    inputs: [
      { name: 'address_id', type: 'bytes32' },
      { name: 'new_address', type: 'address' },
    ],
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'setReplacement',
    inputs: [{ name: 'new_address', type: 'address' }],
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'setRouter',
    inputs: [{ name: 'new_address', type: 'address' }],
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'setKeeper',
    inputs: [{ name: 'new_address', type: 'address' }],
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'setAprOracle',
    inputs: [{ name: 'new_address', type: 'address' }],
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'setReleaseRegistry',
    inputs: [{ name: 'new_address', type: 'address' }],
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'setBaseFeeProvider',
    inputs: [{ name: 'new_address', type: 'address' }],
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'setCommonReportTrigger',
    inputs: [{ name: 'new_address', type: 'address' }],
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'setAuctionFactory',
    inputs: [{ name: 'new_address', type: 'address' }],
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'setSplitterFactory',
    inputs: [{ name: 'new_address', type: 'address' }],
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'setRegistryFactory',
    inputs: [{ name: 'new_address', type: 'address' }],
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'setDebtAllocatorFactory',
    inputs: [{ name: 'new_address', type: 'address' }],
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'setAccountantFactory',
    inputs: [{ name: 'new_address', type: 'address' }],
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'setRoleManagerFactory',
    inputs: [{ name: 'new_address', type: 'address' }],
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'transferGovernance',
    inputs: [{ name: 'new_governance', type: 'address' }],
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'acceptGovernance',
    inputs: [],
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'name',
    inputs: [],
    outputs: [{ name: '', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'governance',
    inputs: [],
    outputs: [{ name: '', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'pendingGovernance',
    inputs: [],
    outputs: [{ name: '', type: 'address' }],
  },
] as const
